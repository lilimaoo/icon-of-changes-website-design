<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Volunteer - Icons of Change</title>
    <link rel="stylesheet" href="../css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        /* Volunteer page specific styles */
        .volunteer-hero {
            background-image: url('../images/volunteer-bg.jpg');
            background-size: cover;
            background-position: center;
            color: #fff;
            position: relative;
            text-align: center;
            padding: 100px 20px;
        }
        
        .volunteer-hero::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.7);
        }
        
        .volunteer-hero-content {
            position: relative;
            max-width: 800px;
            margin: 0 auto;
        }
        
        .volunteer-hero h1 {
            font-size: 3rem;
            margin-bottom: 20px;
        }
        
        .volunteer-hero p {
            font-size: 1.2rem;
            margin-bottom: 30px;
        }
        
        .volunteer-intro {
            background-color: var(--light-bg);
            padding: 100px 20px;
            text-align: center;
            position: relative;
            overflow: hidden;
            background: linear-gradient(135deg, var(--dark-bg) 0%, rgba(20, 20, 20, 0.9) 100%);
        }
        
        .volunteer-intro::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255, 215, 0, 0.1) 0%, transparent 60%);
            opacity: 0.5;
            animation: pulse 20s infinite alternate;
            z-index: 0;
            pointer-events: none;
        }
        
        @keyframes pulse {
            0% { transform: translate(0, 0); }
            50% { transform: translate(5%, 5%); }
            100% { transform: translate(-5%, -5%); }
        }
        
        .volunteer-intro-content {
            max-width: 1200px;
            margin: 0 auto;
            position: relative;
            z-index: 1;
        }
        
        .volunteer-intro h2 {
            font-size: 2.5rem;
            margin-bottom: 30px;
            position: relative;
            display: inline-block;
            color: var(--primary-color);
        }
        
        .volunteer-intro h2::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 0;
            width: 70%;
            height: 3px;
            background: linear-gradient(to right, var(--primary-color), transparent);
        }
        
        .volunteer-intro p {
            margin-bottom: 30px;
            line-height: 1.8;
            font-size: 1.1rem;
        }
        
        .benefits-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 30px;
            margin: 50px 0;
        }
        
        .benefit-card {
            background: rgba(0, 0, 0, 0.2);
            border-radius: var(--border-radius);
            padding: 30px;
            text-align: center;
            transition: all 0.3s ease;
            border: 1px solid rgba(255, 215, 0, 0.2);
            position: relative;
            overflow: hidden;
            box-shadow: var(--shadow);
            animation: fadeInUp 0.8s ease-out forwards;
            opacity: 0;
            transform: translateY(30px);
        }
        
        .benefit-card:nth-child(1) { animation-delay: 0.2s; }
        .benefit-card:nth-child(2) { animation-delay: 0.4s; }
        .benefit-card:nth-child(3) { animation-delay: 0.6s; }
        .benefit-card:nth-child(4) { animation-delay: 0.8s; }
        
        @keyframes fadeInUp {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .benefit-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 5px;
            background: linear-gradient(to right, var(--primary-color), transparent);
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        
        .benefit-card:hover {
            transform: translateY(-10px);
            border-color: var(--primary-color);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
        }
        
        .benefit-card:hover::before {
            opacity: 1;
        }
        
        .benefit-icon {
            height: 80px;
            width: 80px;
            margin: 0 auto 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            background: linear-gradient(45deg, var(--primary-color), #ffcc00);
            border-radius: 50%;
            font-size: 2.5rem;
            color: #000;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
            transition: all 0.3s ease;
        }
        
        .benefit-card:hover .benefit-icon {
            transform: rotateY(180deg);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
        }
        
        .benefit-card h3 {
            margin: 20px 0 15px;
            font-size: 1.4rem;
            color: var(--primary-color);
        }
        
        .benefit-card p {
            margin-bottom: 0;
            font-size: 1rem;
            line-height: 1.6;
        }
        
        .closing-text {
            text-align: center;
            font-size: 1.2rem;
            font-style: italic;
            margin: 30px 0;
            color: #eee;
        }
        
        .opportunities-section {
            padding: 80px 20px;
        }
        
        .category-container {
            max-width: 1200px;
            margin: 0 auto;
        }
        
        .category-heading {
            text-align: center;
            margin-bottom: 50px;
        }
        
        .category-heading h2 {
            font-size: 2rem;
            margin-bottom: 15px;
        }
        
        .section-header {
            text-align: center;
            margin-bottom: 50px;
        }
        
        .program-grid-container {
            display: flex;
            justify-content: center;
            align-items: center;
        }
        
        .program-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 30px;
        }
        
        @media (max-width: 1200px) {
            .program-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }
        
        @media (max-width: 768px) {
            .program-grid {
                grid-template-columns: 1fr;
            }
        }
        
        .program-card {
            background-color: var(--card-bg);
            border-radius: var(--border-radius);
            overflow: hidden;
            box-shadow: var(--shadow);
            transition: var(--transition);
            height: 100%;
            border: 1px solid var(--primary-color);
        }
        
        .program-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2);
        }
        
        .program-image {
            height: 200px;
            overflow: hidden;
        }
        
        .program-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: var(--transition);
        }
        
        .program-card:hover .program-image img {
            transform: scale(1.05);
        }
        
        .program-details {
            padding: 25px;
        }
        
        .program-details h3 {
            font-size: 1.4rem;
            margin-bottom: 15px;
            color: var(--primary-color);
        }
        
        .program-details p {
            margin-bottom: 20px;
            line-height: 1.6;
        }
        
        .program-meta {
            margin-top: 20px;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            padding-top: 15px;
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            align-items: center;
        }
        
        .program-date {
            display: flex;
            align-items: center;
            margin-bottom: 8px;
        }
        
        .program-date i {
            color: var(--primary-color);
            margin-right: 10px;
            width: 20px;
            text-align: center;
        }
        
        .program-location {
            display: flex;
            align-items: center;
            margin-bottom: 8px;
        }
        
        .program-location i {
            color: var(--primary-color);
            margin-right: 10px;
            width: 20px;
            text-align: center;
        }
        
        .apply-now {
            font-weight: 600;
            color: var(--primary-color);
            transition: var(--transition);
            display: block;
            margin-left: auto;
            text-decoration: none;
        }
        
        .apply-now:hover {
            text-decoration: underline;
            color: #ffcc00;
        }
        
        .application-section {
            padding: 100px 20px;
            background: linear-gradient(to bottom, rgba(0,0,0,0.3), rgba(0,0,0,0.1));
            margin-top: 40px;
        }
        
        .application-container {
            max-width: 800px;
            margin: 0 auto;
            background-color: var(--card-bg);
            border-radius: var(--border-radius);
            padding: 50px;
            box-shadow: var(--shadow);
            border: 1px solid var(--primary-color);
            animation: fadeIn 0.6s ease-out;
            position: relative;
            overflow: hidden;
        }
        
        .application-container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 5px;
            height: 100%;
            background: linear-gradient(to bottom, var(--primary-color), transparent);
        }
        
        .application-container h2 {
            text-align: center;
            margin-bottom: 30px;
            color: var(--primary-color);
            font-size: 2.2rem;
            position: relative;
            display: inline-block;
            left: 50%;
            transform: translateX(-50%);
        }
        
        .application-container h2::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 0;
            width: 100%;
            height: 3px;
            background: linear-gradient(to right, transparent, var(--primary-color), transparent);
        }
        
        .form-row {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
            animation: slideUp 0.5s ease-out forwards;
            opacity: 0;
            transform: translateY(20px);
        }
        
        .form-row:nth-child(1) { animation-delay: 0.1s; }
        .form-row:nth-child(2) { animation-delay: 0.2s; }
        .form-group:not(.form-row .form-group) { 
            animation: slideUp 0.5s ease-out forwards;
            opacity: 0;
            transform: translateY(20px);
        }
        .form-group:nth-of-type(3) { animation-delay: 0.3s; }
        .form-group:nth-of-type(4) { animation-delay: 0.4s; }
        .form-group:nth-of-type(5) { animation-delay: 0.5s; }
        .form-group:nth-of-type(6) { animation-delay: 0.6s; }
        .form-submit { 
            animation: slideUp 0.5s ease-out forwards;
            animation-delay: 0.7s;
            opacity: 0;
            transform: translateY(20px);
        }
        
        @keyframes slideUp {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .form-group {
            flex: 1;
            position: relative;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 12px;
            font-weight: 600;
            color: var(--primary-color);
            letter-spacing: 0.5px;
        }
        
        .form-control {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #333;
            border-radius: var(--border-radius);
            background-color: rgba(0, 0, 0, 0.2);
            color: #fff;
            transition: all 0.3s ease;
            box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
        }
        
        .form-control:focus {
            border-color: var(--primary-color);
            outline: none;
            box-shadow: 0 0 0 2px rgba(255, 215, 0, 0.25);
            background-color: rgba(0, 0, 0, 0.2);
            color: #fff;
        }
        
        /* 防止浏览器自动填充时改变背景颜色 */
        input:-webkit-autofill,
        input:-webkit-autofill:hover, 
        input:-webkit-autofill:focus,
        input:-webkit-autofill:active {
            -webkit-box-shadow: 0 0 0 30px #111 inset !important;
            -webkit-text-fill-color: #fff !important;
            transition: background-color 5000s ease-in-out 0s;
        }
        
        textarea.form-control {
            min-height: 150px;
            resize: vertical;
        }
        
        .form-check {
            display: flex;
            align-items: flex-start;
            margin-bottom: 15px;
            transition: transform 0.2s ease;
        }
        
        .form-check:hover {
            transform: translateX(5px);
        }
        
        .form-check input {
            margin-right: 10px;
            margin-top: 5px;
            cursor: pointer;
        }
        
        .form-check input[type="checkbox"] {
            appearance: none;
            -webkit-appearance: none;
            width: 18px;
            height: 18px;
            border: 1px solid #555;
            border-radius: 3px;
            background-color: rgba(0, 0, 0, 0.2);
            display: inline-block;
            position: relative;
            transition: all 0.3s ease;
            vertical-align: middle;
        }
        
        .form-check input[type="checkbox"]:checked {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }
        
        .form-check input[type="checkbox"]:checked::after {
            content: '';
            position: absolute;
            left: 6px;
            top: 2px;
            width: 5px;
            height: 10px;
            border: solid #000;
            border-width: 0 2px 2px 0;
            transform: rotate(45deg);
        }
        
        .form-check label {
            cursor: pointer;
            color: #ddd;
            transition: color 0.3s ease;
        }
        
        .form-check label:hover {
            color: var(--primary-color);
        }
        
        .form-submit {
            text-align: center;
            margin-top: 30px;
        }
        
        .form-submit .cta-button {
            min-width: 200px;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            padding: 14px 40px;
            font-weight: 600;
            letter-spacing: 1px;
            text-transform: uppercase;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
            background: linear-gradient(45deg, var(--primary-color), #ffcc00);
            border: none;
        }
        
        .form-submit .cta-button::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(to right, transparent, rgba(255, 255, 255, 0.3), transparent);
            transition: all 0.5s ease;
        }
        
        .form-submit .cta-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.5);
        }
        
        .form-submit .cta-button:hover::before {
            left: 100%;
        }
        
        @media (max-width: 768px) {
            .form-row {
                flex-direction: column;
                gap: 0;
            }
            
            .volunteer-hero h1 {
                font-size: 2.5rem;
            }
            
            .volunteer-intro h2 {
                font-size: 2rem;
            }
            
            .benefits-grid {
                grid-template-columns: 1fr;
                gap: 20px;
            }
            
            .benefit-icon {
                height: 70px;
                width: 70px;
                font-size: 2rem;
            }
            
            .benefit-card h3 {
                font-size: 1.3rem;
            }
            
            .closing-text {
                font-size: 1.1rem;
            }
        }
        
        /* 表单验证和消息样式 */
        .alert {
            padding: 18px;
            margin-bottom: 25px;
            border-radius: var(--border-radius);
            border-left: 5px solid;
            animation: fadeIn 0.3s ease;
            position: relative;
        }
        
        .alert::before {
            position: absolute;
            font-family: "Font Awesome 5 Free";
            font-weight: 900;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            font-size: 20px;
        }
        
        .alert-success {
            background-color: rgba(40, 167, 69, 0.2);
            border-left-color: #28a745;
            color: #d4edda;
            padding-left: 45px;
        }
        
        .alert-success::before {
            content: '\f00c';
            color: #28a745;
        }
        
        .alert-error {
            background-color: rgba(220, 53, 69, 0.2);
            border-left-color: #dc3545;
            color: #f8d7da;
            padding-left: 45px;
        }
        
        .alert-error::before {
            content: '\f071';
            color: #dc3545;
        }
        
        /* 表单下拉框样式 */
        select.form-control {
            appearance: none;
            -webkit-appearance: none;
            -moz-appearance: none;
            background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='%23ffffff' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: right .75rem center;
            background-size: 8px 10px;
            padding-right: 1.5rem;
        }
        
        select.form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgba(255, 215, 0, 0.25);
        }
        
        select.form-control option[value=""] {
            color: rgba(255, 255, 255, 0.5);
        }
        
        /* 修改选中的默认选项显示颜色 */
        select.form-control {
            color: #fff;
        }
        
        select.form-control option:first-child:checked {
            color: rgba(255, 255, 255, 0.5);
        }
        
        /* 当没有选中任何选项时的显示颜色 */
        select.form-control:invalid,
        select.form-control option[value=""]:checked {
            color: rgba(255, 255, 255, 0.5);
        }
        
        .form-control::placeholder {
            color: rgba(255, 255, 255, 0.5);
            font-style: italic;
            transition: opacity 0.3s ease;
        }
        
        .form-control:focus::placeholder {
            opacity: 0.3;
        }
        
        /* 表单间距和布局优化 */
        .form-group:not(:last-child) {
            margin-bottom: 25px;
        }
        
        .form-group label {
            margin-bottom: 12px;
        }
        
        .show-more-button {
            display: block;
            margin: 0 auto;
            padding: 12px 30px;
            background-color: transparent;
            border: 2px solid var(--primary-color);
            color: var(--primary-color);
            font-size: 1rem;
            font-weight: 600;
            border-radius: 50px;
            cursor: pointer;
            transition: all 0.3s ease;
            min-width: 180px;
        }
        
        .show-more-button:hover {
            background-color: var(--primary-color);
            color: #000;
        }

        .category-cta {
            text-align: center;
            margin-top: 30px;
            margin-bottom: 60px;
        }
        
        .program-card.hidden {
            display: none;
        }
    </style>
</head>
<body>
    <header>
        <nav class="navbar">
            <div class="logo-container">
                <a href="../index.html" class="logo">
                    <img src="../images/logo.png" alt="Icons of Change Logo" class="logo-img">
                    <span class="logo-text">Icons of <span class="highlight">Change</span></span>
                </a>
            </div>
            <div class="nav-links">
                <a href="../index.html">Home</a>
                <a href="about.html">About Us</a>
                <a href="programs.html">Programs</a>
                <a href="volunteer.html" class="active">Volunteer</a>
                <a href="news.html">News & Impact</a>
                <a href="contact.html">Contact</a>
            </div>
            <div class="social-icons">
                <a href="https://www.facebook.com/@IconsOfChangePhilippines" target="_blank" class="social-icon">
                    <i class="fab fa-facebook-f"></i>
                </a>
            </div>
            <a href="volunteer.html" class="cta-button">Become a Volunteer</a>
        </nav>
    </header>

    <section class="volunteer-hero">
        <div class="volunteer-hero-content">
            <h1>Join Our Volunteer Team</h1>
            <p>Be part of a community of changemakers creating meaningful impact</p>
            <a href="#apply" class="cta-button">Apply Now</a>
        </div>
    </section>

    <section class="volunteer-intro">
        <div class="volunteer-intro-content">
            <h2>Why Volunteer With Us</h2>
            <p>At Icons of Change, volunteers are the heartbeat of our organization. By joining our volunteer team, you become part of a vibrant community of passionate individuals dedicated to creating lasting, positive change in communities across the Philippines and beyond.</p>
            
            <div class="benefits-grid">
                <div class="benefit-card">
                    <div class="benefit-icon">
                        <i class="fas fa-hands-helping"></i>
                    </div>
                    <h3>Make a Real Impact</h3>
                    <p>Your contributions directly help communities and individuals in need, creating visible and meaningful change.</p>
                </div>
                
                <div class="benefit-card">
                    <div class="benefit-icon">
                        <i class="fas fa-users"></i>
                    </div>
                    <h3>Join a Community</h3>
                    <p>Connect with like-minded changemakers who share your passion for service and community development.</p>
                </div>
                
                <div class="benefit-card">
                    <div class="benefit-icon">
                        <i class="fas fa-brain"></i>
                    </div>
                    <h3>Develop New Skills</h3>
                    <p>Gain valuable experience, enhance your résumé, and develop professional and personal skills.</p>
                </div>
                
                <div class="benefit-card">
                    <div class="benefit-icon">
                        <i class="fas fa-star"></i>
                    </div>
                    <h3>Receive Recognition</h3>
                    <p>Your volunteer efforts will be acknowledged and celebrated through our volunteer recognition program.</p>
                </div>
            </div>
            
            <p class="closing-text">Whether you have a few hours to spare or are looking for a long-term volunteer opportunity, your skills, experience, and enthusiasm can make a real difference in the lives of others.</p>
        </div>
    </section>

    <section class="opportunities-section">
        <div class="category-container">
            <div class="category-heading">
                <h2>Featured Events</h2>
                <p>Exciting opportunities to showcase talent and create positive change</p>
            </div>
            
            <div class="program-grid-container">
                <div class="program-grid opportunities-grid">
                    <div class="program-card">
                        <div class="program-image">
                            <img src="../images/programs/awards-ceremony.jpg" alt="Icons of Change Metro Manila 2025 Awarding Ceremony">
                        </div>
                        <div class="program-details">
                            <h3>Icons of Change Metro Manila 2025 Awarding Ceremony</h3>
                            <p>A prestigious annual program honoring individuals, organizations, and businesses driving positive societal impact, running in tandem with the Metro Manila SDG Action Summit 2025.</p>
                            <div class="program-meta">
                                <div class="program-date">
                                    <i class="far fa-calendar-alt"></i> April 27, 2025
                                </div>
                                <a href="#apply" class="apply-now">Apply Now</a>
                            </div>
                        </div>
                    </div>
                    
                    <div class="program-card">
                        <div class="program-image">
                            <img src="../images/programs/peace-symposium.jpg" alt="International Year of Peace and Trust Symposium 2025">
                        </div>
                        <div class="program-details">
                            <h3>International Year of Peace and Trust Symposium 2025</h3>
                            <p>A symposium focusing on conflict resolution, peace-building, and trust development in alignment with the UN's 2025 International Year of Peace and Trust.</p>
                            <div class="program-meta">
                                <div class="program-date">
                                    <i class="far fa-calendar-alt"></i> January 25, 2025
                                </div>
                                <a href="#apply" class="apply-now">Apply Now</a>
                            </div>
                        </div>
                    </div>
                    
                    <div class="program-card">
                        <div class="program-image">
                            <img src="../images/programs/wellness-seminar.jpg" alt="Wellness Without Borders: Nature's Impact on Your Health">
                        </div>
                        <div class="program-details">
                            <h3>Wellness Without Borders: Nature's Impact on Your Health</h3>
                            <p>An insightful seminar exploring how environmental health influences personal wellbeing, featuring healthcare and environmental experts.</p>
                            <div class="program-meta">
                                <div class="program-date">
                                    <i class="far fa-calendar-alt"></i> January 18, 2025
                                </div>
                                <a href="#apply" class="apply-now">Apply Now</a>
                            </div>
                        </div>
                    </div>
                    
                    <div class="program-card">
                        <div class="program-image">
                            <img src="../images/programs/expert-talks.jpg" alt="Empowering Lives: Expert Talks on Health and Personal Growth">
                        </div>
                        <div class="program-details">
                            <h3>Empowering Lives: Expert Talks on Health and Personal Growth</h3>
                            <p>An inspiring educational event featuring Dr. Arvin C. Marbibi on diabetes management and Malvin Dinlasan on genuine compassion.</p>
                            <div class="program-meta">
                                <div class="program-date">
                                    <i class="far fa-calendar-alt"></i> January 11, 2025
                                </div>
                                <a href="#apply" class="apply-now">Apply Now</a>
                            </div>
                        </div>
                    </div>
                    
                    <div class="program-card">
                        <div class="program-image">
                            <img src="../images/programs/alumni-dinner.jpg" alt="Perpetual Help Alumni Testimonial Dinner">
                        </div>
                        <div class="program-details">
                            <h3>Perpetual Help Alumni Testimonial Dinner</h3>
                            <p>A prestigious event honoring distinguished Alumni Icons of Change Awardees who have significantly impacted their respective fields and communities.</p>
                            <div class="program-meta">
                                <div class="program-date">
                                    <i class="far fa-calendar-alt"></i> November 27, 2024
                                </div>
                                <a href="#apply" class="apply-now">Apply Now</a>
                            </div>
                        </div>
                    </div>
                    
                    <div class="program-card">
                        <div class="program-image">
                            <img src="../images/programs/idpd-event.jpg" alt="International Day of Persons with Disabilities 2024">
                        </div>
                        <div class="program-details">
                            <h3>International Day of Persons with Disabilities 2024</h3>
                            <p>A celebration of PWD leadership and inclusive development, featuring talks by John Guarnes and Dr. Mayla Wahab.</p>
                            <div class="program-meta">
                                <div class="program-date">
                                    <i class="far fa-calendar-alt"></i> December 7, 2024
                                </div>
                                <a href="#apply" class="apply-now">Apply Now</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="category-cta">
                <button class="show-more-button" id="showMoreEvents">Show more</button>
            </div>
        </div>
    </section>

    <section id="apply" class="application-section">
        <div class="application-container">
            <h2>Volunteer Application</h2>
            <form id="volunteerForm">
                <div class="form-row">
                    <div class="form-group">
                        <label for="firstName">First Name *</label>
                        <input type="text" id="firstName" class="form-control" placeholder="Enter your first name" required>
                    </div>
                    <div class="form-group">
                        <label for="lastName">Last Name *</label>
                        <input type="text" id="lastName" class="form-control" placeholder="Enter your last name" required>
                    </div>
                </div>
                
                <div class="form-row">
                    <div class="form-group">
                        <label for="email">Email *</label>
                        <input type="email" id="email" class="form-control" placeholder="Enter your email address" required>
                    </div>
                    <div class="form-group">
                        <label for="phone">Phone Number</label>
                        <input type="tel" id="phone" class="form-control" placeholder="Enter your phone number">
                    </div>
                </div>
                
                <div class="form-group">
                    <label for="programSelect">Select a Specific Program to Volunteer For *</label>
                    <select id="programSelect" class="form-control" required>
                        <option value="" selected disabled>-- Please select a program --</option>
                        <!-- 这里的选项将通过JavaScript动态生成 -->
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="experience">Relevant Skills & Experience</label>
                    <textarea id="experience" class="form-control" placeholder="Tell us about your skills, experiences, and qualifications that would be valuable for volunteering."></textarea>
                </div>
                
                <div class="form-group">
                    <label for="motivation">Why do you want to volunteer with Icons of Change? *</label>
                    <textarea id="motivation" class="form-control" required placeholder="Share your motivation for volunteering and what you hope to achieve or contribute."></textarea>
                </div>
                
                <div class="form-submit">
                    <button type="submit" class="cta-button">Submit Application</button>
                </div>
            </form>
        </div>
    </section>

    <footer>
        <div class="footer-content">
            <div class="footer-logo">
                <a href="../index.html">
                    <img src="../images/logo.png" alt="Icons of Change Logo" class="footer-logo-img">
                    <span class="logo-text">Icons of <span class="highlight">Change</span></span>
                </a>
            </div>
            <div class="footer-links">
                <a href="../index.html">Home</a>
                <a href="about.html">About Us</a>
                <a href="programs.html">Programs</a>
                <a href="volunteer.html">Volunteer</a>
                <a href="news.html">News & Impact</a>
                <a href="contact.html">Contact</a>
            </div>
            <div class="footer-cta">
                <a href="volunteer.html" class="cta-button">Become a Volunteer</a>
            </div>
        </div>
        <div class="footer-bottom">
            <p>© Icons of Change All Rights Reserved | <a href="privacy.html">Privacy Policy</a> | <a href="terms.html">Terms</a> | <a href="sitemap.html">Sitemap</a></p>
        </div>
    </footer>

    <script src="../js/main.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Get the program selection dropdown
            const programSelect = document.getElementById('programSelect');
            
            // Show more button functionality
            const showMoreButton = document.getElementById('showMoreEvents');
            const eventCards = document.querySelectorAll('.opportunities-grid .program-card');
            
            // Default number of cards to show
            const defaultShownCount = 3;
            
            // Initialize show/hide state
            function initializeCards() {
                eventCards.forEach((card, index) => {
                    if (index >= defaultShownCount) {
                        card.classList.add('hidden');
                    }
                });
                
                // Hide the button if there are fewer cards than the default count
                if (eventCards.length <= defaultShownCount) {
                    showMoreButton.style.display = 'none';
                }
            }
            
            // Execute initialization
            initializeCards();
            
            // Handle "Show more" button click
            showMoreButton.addEventListener('click', function() {
                // Check if there are hidden cards
                const hiddenCards = document.querySelectorAll('.opportunities-grid .program-card.hidden');
                
                if (hiddenCards.length > 0) {
                    // Show all cards
                    hiddenCards.forEach(card => {
                        card.classList.remove('hidden');
                    });
                    showMoreButton.textContent = 'Show less';
                } else {
                    // Re-hide some cards
                    eventCards.forEach((card, index) => {
                        if (index >= defaultShownCount) {
                            card.classList.add('hidden');
                        }
                    });
                    showMoreButton.textContent = 'Show more';
                }
            });
            
            // Load program information from programs.html
            fetchPrograms();
            
            // If redirected from program details page, automatically select the corresponding program
            const urlParams = new URLSearchParams(window.location.search);
            const programId = urlParams.get('program');
            const volunteerRole = urlParams.get('role');
            
            if (programId) {
                // Wait for the dropdown to load completely before setting the selected option
                setTimeout(() => {
                    const option = document.querySelector(`option[data-id="${programId}"]`);
                    if (option) {
                        option.selected = true;
                    }
                }, 500);
            }
            
            // If redirected from program details page, automatically scroll to the application form
            if (volunteerRole) {
                setTimeout(() => {
                    document.getElementById('apply').scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                    
                    // Add a highlight prompt to inform the user that they have selected a volunteer role
                    showMessage('success', `You have selected to apply for the "${volunteerRole}" volunteer role. Please complete the form below to submit your application.`, 4000);
                }, 600);
            }
            
            // Add click events for all Apply Now buttons
            document.querySelectorAll('.apply-now').forEach((button, index) => {
                button.addEventListener('click', function(e) {
                    e.preventDefault();
                    
                    // Get the corresponding event name and date
                    const eventCard = this.closest('.program-card');
                    const eventName = eventCard.querySelector('h3').textContent;
                    const eventDate = eventCard.querySelector('.program-date').textContent.trim();
                    
                    // Scroll to the application form
                    document.getElementById('apply').scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                    
                    // Automatically select the corresponding event (if available)
                    setTimeout(() => {
                        const options = programSelect.options;
                        for (let i = 0; i < options.length; i++) {
                            if (options[i].text.includes(eventName)) {
                                options[i].selected = true;
                                break;
                            }
                        }
                    }, 500);
                    
                    // Display the selected event prompt
                    showMessage('success', `You have selected to volunteer for the "${eventName}" event. Please complete the form below to submit your application.`, 4000);
                    
                    // Automatically fill in relevant fields if applicable
                    // For example, add a prefix to the motivation field
                    const motivationField = document.getElementById('motivation');
                    if (motivationField && !motivationField.value) {
                        motivationField.value = `I am interested in volunteering for the "${eventName}" event because...`;
                        motivationField.focus();
                    }
                });
            });
            
            // Load program information from programs.html and populate the dropdown
            function fetchPrograms() {
                fetch('programs.html')
                    .then(response => response.text())
                    .then(html => {
                        const parser = new DOMParser();
                        const doc = parser.parseFromString(html, 'text/html');
                        
                        // Get all program cards
                        const programCards = doc.querySelectorAll('.program-card');
                        
                        // Clear existing options (keep default option)
                        while (programSelect.options.length > 1) {
                            programSelect.remove(1);
                        }
                        
                        // Extract data and sort (date descending)
                        const programs = [];
                        programCards.forEach((card, index) => {
                            const title = card.querySelector('h3').textContent;
                            const dateText = card.querySelector('.program-date').textContent.trim().replace(/\s+/g, ' ');
                            const dateStr = dateText.replace('  ', ' ').replace(/[^\d]/g, ''); // Extract date digits
                            
                            programs.push({
                                title: title,
                                date: dateText,
                                dateStr: dateStr,
                                id: `program-${index}`
                            });
                        });
                        
                        // Sort by date descending
                        programs.sort((a, b) => {
                            return b.dateStr.localeCompare(a.dateStr);
                        });
                        
                        // Add sorted programs to the dropdown
                        programs.forEach((program, index) => {
                            const option = document.createElement('option');
                            option.value = program.title;
                            option.setAttribute('data-id', program.id);
                            option.textContent = `${program.title} (${program.date})`;
                            
                            programSelect.appendChild(option);
                        });
                    })
                    .catch(error => {
                        console.error('Error fetching programs:', error);
                        
                        // Add some static options as fallback, sorted by date descending
                        const fallbackPrograms = [
                            "Icons of Change Metro Manila 2025 Awarding Ceremony (April 27, 2025)",
                            "International Year of Peace and Trust Symposium 2025 (January 25, 2025)",
                            "Wellness Without Borders: Nature's Impact on Your Health (January 18, 2025)",
                            "Empowering Lives: Expert Talks on Health and Personal Growth (January 11, 2025)",
                            "International Day of Persons with Disabilities 2024 (December 7, 2024)",
                            "Perpetual Help Alumni Testimonial Dinner (November 27, 2024)"
                        ];
                        
                        fallbackPrograms.forEach((program, index) => {
                            const option = document.createElement('option');
                            option.value = program.split(' (')[0]; // Use program name as value
                            option.setAttribute('data-id', `program-${index}`);
                            option.textContent = program;
                            programSelect.appendChild(option);
                        });
                    });
            }
            
            const volunteerForm = document.getElementById('volunteerForm');
            
            volunteerForm.addEventListener('submit', function(e) {
                e.preventDefault();
                
                // Simple form validation
                const firstName = document.getElementById('firstName').value;
                const lastName = document.getElementById('lastName').value;
                const email = document.getElementById('email').value;
                const selectedProgram = programSelect.value;
                
                if (firstName && lastName && email && selectedProgram) {
                    // Here you would typically send the form data to a server
                    // For this example, we'll just show a success message
                    
                    // Build form data summary to display
                    const programInfo = `Selected program: ${selectedProgram}`;
                    const nameInfo = `Name: ${firstName} ${lastName}`;
                    const emailInfo = `Email: ${email}`;
                    
                    // Success message
                    showMessage('success', 'Your volunteer application has been successfully submitted! Thank you for your interest.<br><br>' + 
                        `${nameInfo}<br>${emailInfo}<br>${programInfo}<br><br>` +
                        'We will get back to you soon.');
                    
                    // Reset the form
                    volunteerForm.reset();
                } else {
                    // Error message
                    showMessage('error', 'Please fill in all required fields.');
                }
            });
            
            // Show message function
            function showMessage(type, message, timeout = 5000) {
                // Remove existing messages
                const existingMessages = document.querySelectorAll('.alert');
                existingMessages.forEach(msg => msg.remove());
                
                // Create new message
                const messageElement = document.createElement('div');
                messageElement.className = `alert alert-${type}`;
                messageElement.innerHTML = message;
                
                // Insert message
                volunteerForm.parentNode.insertBefore(messageElement, volunteerForm);
                
                // Scroll to message position
                messageElement.scrollIntoView({ behavior: 'smooth', block: 'center' });
                
                // Automatically remove message
                if (type === 'success' && message.includes('has been successfully submitted')) {
                    setTimeout(function() {
                        messageElement.remove();
                    }, 8000);
                } else {
                    setTimeout(function() {
                        messageElement.remove();
                    }, timeout);
                }
            }
        });
    </script>
</body>
</html> 
